name: sync

on:
  push:
    branches:
      - main
  pull_request:
    branches: ["main"]
    paths:
      - ".github/workflows/sync.yml" #only sync when its necessary; running it to api limits
  workflow_dispatch:

  # schedule:
  #   - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB || github.token }}
  token: ${{ secrets.TOKEN_GITHUB || github.token }}
  GH_TOKEN: ${{ secrets.TOKEN_GITHUB || github.token }}
  GITHUB_REPO: ${{github.repository}}
  WORKER_ORG: laciferin
  ORIGINALS: ${{github.repository_owner}}==antFame
  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY || ''}}
  # WORKER_NAME: ${{ github.workflow }}-${{github.ref}}

jobs:
  # workflow1:
  #   uses: octo-org/example-repo/.github/workflows/workflow1.yaml@main
  sync-across-dapps:
    if: github.repository == 'antFame/ant'

    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        org: [colony2026, colony2027, colony2028, colony2029, colony2030]
        repo: [a, b, c, d, e, f] #, g, h, i, j, k, l, m, "n", o, p, q] #, r, s, t]

    runs-on: ubuntu-latest
    env:
      REPO: ${{matrix.org}}/${{matrix.repo}}
    steps:
      - uses: actions/checkout@v4
      - uses: extractions/setup-just@v1

      - name: Set up Git credentials
        run: |
          git config --global user.name Nasfame
          git config --global user.email "laciferin@gmail.com"
          git config --global credential.helper '!f() { echo "username=Nasfame\npassword=$GITHUB_TOKEN"; }; f'
          git config --global push.autoSetupRemote true
          git config --global push.default matching
          git config --global alias.tags 'tag -n99'

      # - name: Authenticate GitHub CLI #no need to authenticate GH_TOKEN set
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create repo
        continue-on-error: true
        run: gh repo create ${{env.REPO}} --public --confirm

      # - name: Set secrets
      #   run: |
      #     gh secret set WORKER_ORG --org ${{matrix.org}} --repos ${{matrix.repo}} --body ${{ env.WORKER_ORG }}
      #     gh secret set TOKEN_GITHUB --org ${{matrix.org}} --repos ${{matrix.repo}} --body ${{ env.GITHUB_TOKEN }}
      #     gh secret set SSH_PRIVATE_KEY --org ${{matrix.org}} --repos ${{matrix.repo}} --body "${{ secrets.SSH_PRIVATE_KEY }}"
      #     gh secret set ABC -R github.com/colony2024/a --body b

      - name: Set Secrets # fixes --repos were visibilty
        # if: github.ref_name == 'main'
        continue-on-error: true #TODO:
        run: |
          just set-secret WORKER_ORG ${{env.WORKER_ORG}} ${{matrix.org}} ${{matrix.repo}}
          just set-secret TOKEN_GITHUB "${{env.GH_TOKEN}}" ${{matrix.org}} ${{matrix.repo}}
          sshPrivateKey=$(echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r')
          just set-secret SSH_PRIVATE_KEY "$sshPrivateKey" "${{matrix.org}}" "${{matrix.repo}}"

      # - uses: actions/checkout@v4
      #   with:
      #     repository: ${{github.repository}}
      #     # branch: main
      #     path: ./ant
      #     # tags: true
      #     bare: true
      #     token: ${{env.GITHUB_TOKEN}}
      #     ssh-key: ${{secrets.SSH_PRIVATE_KEY}}
      #     submodules: true
      #     persist-credentials: true

      - name: Clone
        run: |
          git clone --bare https://github.com/${{github.repository}} ./ant

      - name: Mirror
        run: |
          cd ./ant
          git lfs fetch --all

          # TODO: git clone --bare  <url>
          git remote set-url --push origin https://github.com/${{env.REPO}}
          # git remote set-url origin https://github.com/${{env.REPO}}
          git fetch -p origin
          # git lfs push --all https://github.com/EXAMPLE-USER/NEW-REPOSITORY.git
          git push --mirror
          git lfs push --all origin
          # git push origin main -f
      # set gh auth
      # gh create public repo in a step
      # gh add secret WORKER_ORG secret to the repo
      # gh add secret TOKEN_GITHUB in another step
